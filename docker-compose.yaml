version: "3.9"

services:
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"   # REST API + dashboard
      - "6334:6334"   # gRPC
    volumes:
      - qdrant_storage:/qdrant/storage

  minio:
    image: minio/minio:latest
    container_name: minio
    command: server /data --console-address ":9090"
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password123
    ports:
      - "9000:9000"   # S3 API
      - "9090:9090"   # Web console
    volumes:
      - minio_data:/data

  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password123
      POSTGRES_DB: candidates
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: password123
    ports:
      - "8080:80"
    depends_on:
      - postgres

  api:
    build: API
    container_name: api
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      QDRANT_URL: http://qdrant:6333
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: password123
      MINIO_BUCKET: raw-cv-documents
      POSTGRES_HOST: postgres
      POSTGRES_DB: candidates
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password123
      HUGGINGFACE_HUB_TOKEN: 
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    depends_on:
      - qdrant
      - minio
      - postgres

volumes:
  qdrant_storage:
  minio_data:
  postgres_data:

networks:
  